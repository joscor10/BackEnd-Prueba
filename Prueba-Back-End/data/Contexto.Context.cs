//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prueba_Back_End.data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Contexto : DbContext
    {
        public Contexto()
            : base("name=Contexto")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<peliculas> peliculas { get; set; }
        public virtual DbSet<usuarios> usuarios { get; set; }
    
        public virtual ObjectResult<proc_peliculas_Result> proc_peliculas(string operacion, Nullable<int> id, string titulo, string descripcion, string director, Nullable<int> disponible)
        {
            var operacionParameter = operacion != null ?
                new ObjectParameter("operacion", operacion) :
                new ObjectParameter("operacion", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var directorParameter = director != null ?
                new ObjectParameter("director", director) :
                new ObjectParameter("director", typeof(string));
    
            var disponibleParameter = disponible.HasValue ?
                new ObjectParameter("disponible", disponible) :
                new ObjectParameter("disponible", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_peliculas_Result>("proc_peliculas", operacionParameter, idParameter, tituloParameter, descripcionParameter, directorParameter, disponibleParameter);
        }
    
        public virtual ObjectResult<proc_usuarios_Result> proc_usuarios(string operacion, Nullable<int> id, string email, string pass, string rUT, string nombre, string direccion, string telefono)
        {
            var operacionParameter = operacion != null ?
                new ObjectParameter("operacion", operacion) :
                new ObjectParameter("operacion", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var rUTParameter = rUT != null ?
                new ObjectParameter("RUT", rUT) :
                new ObjectParameter("RUT", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_usuarios_Result>("proc_usuarios", operacionParameter, idParameter, emailParameter, passParameter, rUTParameter, nombreParameter, direccionParameter, telefonoParameter);
        }

        public System.Data.Entity.DbSet<Prueba_Back_End.Models.Pelicula> Peliculas { get; set; }
    }
}
